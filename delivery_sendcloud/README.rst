==================
SendCloud Shipping
==================

.. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3

|badge1| |badge2|

This module is part of the SendCloud official connector for Odoo.

At the moment, the SendCloud official connector for Odoo consists of two modules: delivery_sendcloud and website_sendcloud.

1) delivery_sendcloud. This module works for the backend.
2) website_sendcloud. This module is for the frontend (webshop) and it depends on delivery_sendcloud.


This module mostly implements what's described in https://docs.sendcloud.sc/api/v2/shipping/

Full documentation for developers is in https://docs.sendcloud.sc/.

**Table of contents**

.. contents::
   :local:

Installation
============

In the Odoo configuration file add ``delivery_sendcloud`` in the list
``server_wide_modules``:

.. code-block:: ini

  [options]
  (...)
  server_wide_modules = web,delivery_sendcloud
  (...)

A restart of the Odoo server is required afterwards.

Configuration
=============

Odoo Integration
~~~~~~~~~~~~~~~~

Verify that the value of "web.base.url" parameter in System Parameters is set with
the correct url (eg.: "https://demo.onestein.eu" instead of "http://localhost:8069").

Go to SendCloud > Configuration > Wizards > Setup the SendCloud Integration. Click on Setup Integration. A wizard will pop up.

Select Odoo Integration. Confirm.
You will be redirected to a SendCloud page asking you to authorize OdooShop to access your Sendcloud account.
Click on Connect in the SendCloud page.

Go back to the Odoo Integration configuration. An integration "OdooShop" is now present in the Integration list view.
Open the OdooShop Integration form.
Edit the OdooShop Integration. The changes you make will be in sync, SendCloud side, with the integration configuration.

In case multiple integrations are present, sort the integrations by sequence, to allow
Odoo to choose the default one that will be used.

API Integration
~~~~~~~~~~~~~~~

Go to SendCloud > Configuration > Wizards > Setup the SendCloud Integration. Click on Setup Integration. A wizard will pop up.

Select API Integration. Confirm.
Enter the public and secret keys provided by SendCloud.
Here is how to create api key in SendCloud:
https://github.com/SendCloud/api-integration-example

Confirm. An API integration is now present in the Integration list view.
Open the API Integration form.
Edit the API Integration. The changes you make will be in sync, SendCloud side, with the integration configuration.


SendCloud panel settings
~~~~~~~~~~~~~~~~~~~~~~~~

When you configure the Integration settings in the online SendCloud panel (https://panel.sendcloud.sc/)
those settings are also sync-ed with the Integration settings Odoo side.


Synchronize SendCloud objects
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

After the setup of the integration with SendCloud server is completed, second step is
to synchronize the objects present in SendCloud server to Odoo.
To synchronize SendCloud objects for the first time:

- Go to SendCloud > Configuration > Wizards >Sync the SendCloud Objects. A wizard will pop up.
- Select all the objects. Confirm. This will retrieve the required data from SendCloud server.

Some SendCloud objects will be automatically synchronized from the SendCloud server to Odoo.
Those SendCloud objects are:

- Parcel Statuses
- Invoices
- Shipping Methods
- Sender Addresses

To configure how often those objects should be retrieved from the SendCloud server:

- Go to Settings > Technical > Automation > Scheduled Actions. Search Scheduled Actions for "SendCloud".
- Set the "Execute Every" value according to your needs.


Sender Addresses and Warehouses
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In case of multiple warehouses configured in Odoo (eg.: user belongs to group "Manage multiple Warehouse"):

Go to SendCloud > Configuration > Integration. Click on Configure Warehouse Addresses. A wizard will pop up.
Set the corresponding Sendcloud Sender Address for each of the warehouse addresses.

Alternatively, in Inventory > Configuration > Warehouses, select an address. In the address form, go to Sales and Purchase tab and set the Sencloud Sender Address.
In Sale Order > Delivery: select the Warehouse. Check that the address of the Warehouse has a Sendcloud Senser Address.

Test Mode
~~~~~~~~~

Enabling the Test Mode allows you to access extra functionalities that are useful to test the connector.

To enable the Test Mode, go to the "General Settings": under the SendCloud section you can find the "Enable Test Mode" flag.

Usage
=====

Quickstart
==========

In short this is how the module works:

- the user creates a sale order in Odoo; the user clicks on "Add shipping" button and selects one of the shipping methods provided by SendCloud
- when confirming the sale order, a delivery document is generated (stock.picking)
- when confirming the picking, a parcel (or multiple parcels) for the specific sales order are created in Sendcloud under Shipping > Created labels
- the picking is updated with the information from Sendcloud (tracking number, tracking url, label etc...)

Map of Sendcloud-Odoo data models
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

+-----------------+-------------------+
| SendCloud       | Odoo              |
+=================+===================+
| Integration     |                   |
+-----------------+-------------------+
| Brand           | Website Shop      |
+-----------------+-------------------+
| Order           | Sales Order       |
+-----------------+-------------------+
| Shipment        | Picking           |
+-----------------+-------------------+
| Parcel (colli)  | Picking packs     |
+-----------------+-------------------+
| Sender address  | Warehouse address |
+-----------------+-------------------+
| Shipping Method | Shipping Method   |
+-----------------+-------------------+


Multicollo parcels
~~~~~~~~~~~~~~~~~~

In Inventory > Configuration > Delivery Packages, set the carrier to Sendcloud.
In the out picking, put the products in different Sendcloud packages to create Multicollo parcels.

Service Point Picker
~~~~~~~~~~~~~~~~~~~~

The module contains a widget, the Service Point Picker, that allows the selection of the service point.
The widget is placed in the "SendCloud Shipping" tab of the picking. The widget is visible in case the following is true:

 - the configuration in the SendCloud panel has the Service Point flag to True (in the SendCloud integration config)
 - the Shipping Method selected in the picking is provided by Sendcloud
 - the Shipping Method has field sendcloud_service_point_input == "required"
 - all the criteria (from country, to country, weight) match with the current order

Cancel parcels
~~~~~~~~~~~~~~

When canceling parcels a confirmation popup will ask for confirmation.


Troubleshooting
~~~~~~~~~~~~~~~

If the communication to the SendCloud server fails (eg.: while creating a parcel),
the exchanged message is stored in a Log section, under Logging > Actions.

Known issues / Roadmap
======================

TODO
====

- Enable different Shipping Methods for different Websites?
- Are there shipping methods without weight limit?
- are there delivery carriers with different from-country records?

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/Onestein/server-tools/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us smashing it by providing a detailed and welcomed
`feedback <https://github.com/Onestein/server-tools/issues/new?body=module:%20delivery_sendcloud%0Aversion:%2013.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* Onestein

Maintainers
~~~~~~~~~~~

This module is part of the `Onestein/server-tools <https://github.com/Onestein/server-tools/tree/13.0/delivery_sendcloud>`_ project on GitHub.

You are welcome to contribute.
